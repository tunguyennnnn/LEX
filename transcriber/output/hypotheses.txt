1: hi and welcome to Texas to toilets today we are going to learn about a function Cheney in Java script if you use jquery well you must have seen something like this where you can actually %HESITATION at a class in the moo class in that one single line by using the dot notation and this is what it's called function change this is very useful and create Kansai's code we gonna learn how to function chaining into regular function objects and also in a closure as well so let's get to some coding and how to do function training are in pure Java script before that we are going to use this wonderful website called GS spittle dot net aren't you here in this website are here in the lower block will write our shower scared and when we when we are click on run and %HESITATION the result would render here so let's first so don't create an object so start with I'm just going to create an object name object obviously and which is a function our if you know chalice in Java script objects are functions also objects aren't here here I'm going to first create a public property call I for that I can use keyword desk dot I equal to zero so it has a value zero aren't I will add a function this dog pad a public function equal to function are what it does it adds a number two I so I'm gonna pass this argument I and this will be added to D. public property I so this function so this line basically saying that our take the argument and added to this talk I which is the public property are similarly we can create subsect function and I can just to write here track and a surplus we can say minus also we can create another function which will print this object you quoted function and when I say print it's all it's doing is so just a console block this dot I now now that you have this object I can which is which behaves like a class if I can create under our an object from me so negative are so now I'm going to create %HESITATION an object X. from this subject so I can use a keyword new and this will create an object ex now I can actually now if I wonder %HESITATION up use this matter on this I I can simply say ex dot had aren't that say three I can subtracted by six stop so correct I would hesitate to so in this era I'm first adding two and substructure adding three and subtracting two Tara that means my answer should be one current so they should actually print the define the result let's see how it works from where open the inspect element by right clicking on it my chrome browser supply right click on it the consul opens up and when I %HESITATION when I run this I get one our which works fine but business does not function Cheney what I really want to do is this so far I and makes a space here so we can see better what I really wanna do is X. star dad three dot it sucks tracked to dot correct and they should get me the same result and this but we cannot do this yet are there is a reason for it so de we need to extort EHCI it's not returning anything so let let's look at a right so if I if I let me comment this out first and a fight rent if I say console dot log take stock ed three when I do this well I do on so called and it's it says I slid into let me comment this guy out and clear the log by clicking this button when I run this I get undefined so if I ever ever have undefined I can apply this to substrate from one defining that is why we don't have we cannot do this yet but the solution to that is yes if five in this ad function virus return the entire object by saying returns this and let's try this now I'm gonna say console log X. start at clear this and when I run this I get object the the entire object back which has a function subject which means I can actually do the function chaining using this let's do the return also here in the subject function now I don't have to do to return here because the last function of what I call so there is nothing to be called after so I don't I don't really need to return in this flop print function so now let's you know this reliance and there's also discover so now chaining the function extort et T. dot subscribe to dot print when I run this I get one now let's see if I am a closure and I'll do the same thing how do I do that so in order to create a closure I need to have %HESITATION interviews public methods and public property I need to have a private %HESITATION properties of private variables so insert this I just have to save our I equal to zero here all I have to say the bar at equal to function and enter this I can just say I so I can I have to I cite you have to use J. here because now it does get confused if there's not this year arm we not using because it's not up public I was not a public property %HESITATION because if you know the scope our scope change and this I is automatically available any function that is defined within this function so I can also do the same thing with this guy bar such track in pounds G. here okay here and I can simply do this and I can also do this Clark print and call until dawn 
2: today we are going to learn about closures in javascript geysers so many complicated tutorials out there want closure it's unbelievable why do people put complicated examples but here it is I'm creating something very simple something that you can understand something very simple and clears I'll bet you know what a fundamental of closures in Java script minded to support usually when you create a function in most programming languages either you passed some parameters or you define some in our valley if you look in this example sheer I have a function name added to I'm passing this parameter past I have in a variable with value to and I'm returning paschalis inner so in this case if I would say apt to Trini men's it would actually plus two and it would return the five it's very simple %HESITATION function that adds whatever number you pass it adds to to it and returns the value so if I run this example let's if I click on a line here I'm using GS fiddle for us as you can see it the value is five but in Java script you can get by without passing any variables now you wonder how then if you don't passing it then how do you get the value well you can define this variable outside like lar equal to tree and I don't really have to do this I can this app to and if I run this very clear there's if I run this I do I get the same answer are you wondering ways explosion here I'm gonna get to it there is it this is a closure now it doesn't look like it but it is a closure someone give you a very simple example how close you worked in a mine and then I'll give you another example of how to use it in Java script variables produced are defined outside function are automatically available inside because Java script uses something called lexical scoping minutes enter variable in our is not alone %HESITATION accessible outside but anything that is define outside is automatically available inside but how does it really do it the answer is closer I went to interview once and and the guy asked me to give me a example of closure and I did this and he said no this is not closure and I did something following and I showed him how this is a closure he was expecting the answer he was expecting the answer to be inner function yes inner functions also when you pass it around it there also closure which will look at next but this is also clear this is simple simplest closure technically any value any function where you don't when were you using a variable from outside the scope are actually closures insert of running this function if I just want to look at the function op because functions also objects in javascript so if I just want to look at it how it looks like a I can say DIR I don't have to execute execute this this will let me know inside of the object Hans I clear this first and if I run this I would get this function at two now I'm gonna and it's a little bit and I'm gonna expand this fall expand this year if I if I expand this function scope no I'm using chrome browser so if you're using a Firefox it might be a little bit different but also for this example I would submit suggest you use chrome and not a I don't work so good will or I'm not promoting the product but I think chrome is really great it's a program so if I expanded its functions go I would see something called closure here and if I expand the closure I would see that variable passed as a property and the value of that property is three so this is how the function add to using variable that is defined outside the function inside the function using the closure it's not a magic this is a very simple example so in order to exit you are to function it will look to the variable in needs cost is not defined so what it will do it will look and the school outside the phone you cannot find it it would keep going further until it finds it if you cannot find it then he will be undefined but if you'd find at any point Danny wood added to that if I do something interesting %HESITATION if I change this very well past here to let's say for I'm gonna clear this and I'm gonna run this again so before the definition it was three now it's four am when I console long it what should I see let's look at it I look at the closure it's for right now so that means if I run let me clear this and I'm gonna when a console lock here at two and when I regard this year so initially it's three so it's gonna print tree here and it's gonna print for us it's gonna print three plus two which is five and it's gonna print here off four plus let's look at another example a better example floater this is a very simple example we gonna look a little bit by the way I'm gonna CVS example here in the GS fiddle so can play around with it if you can if you can go to this URL and you'll see the exact example and you can play around so let's look at this example it's similar to previous example but it's broken it's broken down into two functions one out of function which is apt to and they didn't this function I have another function call at as you can see the first function I have variable past and another function the in the inner function I have a variable called inner which is also passed but for for added to this is still inner so that's why I'm calling it inner and what that does is his passing it what Alan does is it takes the past variable and it adds to the inner barrel and returns returns so this function returns hospice inner in the act to function returns de ad function itself so listen to secular within this ad to function we have a function that returns a value an area to return to function itself so fine do this if I do added to if I passed some there %HESITATION past value let's say if I say a tree what do you think it does takes this past and it passage here so it will return dysfunction ad what pass value SG inner is still not define so far I just console DIR I would see it if I do this and grandis I would see a function returns and within this function if you look closely it has a closure so it preserved as three value and inside so I can use it like this 
3: welcome to Texas tornadoes of many if you ask me about creating a protective toward us so here I am javascript his prototype based language and inheritance in Java script is based on current type birds have is a huge topic and I cannot just teach prototype without how the conceptual works how in her that's where so this tutorial is going to be %HESITATION but I do not skip because every step is very poor oil by default every function has a property called Kutai this property by default is empty and you can add properties and matters to it and when you create objects from this function on for example out if I create excellent from Eric's it would inherit these properties and matters that's defining exits prototype so this is our in nutshell what we're going to be this now our javascript is a bit confusing for developer %HESITATION experience developer in class based languages like you know Java or C. sharp %HESITATION it is very dynamic and he does not kawaii %HESITATION class implementation now get out in a recent now ECM a six the latest version of Java script has a class keyword which it's not the same are as you know the one in Java or C. shark I still considers a prototype based language and just like in John why you would create class in Dan create objects strum it bomb in Java script you would create constructor directly and using this constructors you can create objects from it so let's look at an example of constructor now here in this example on I have a function X. %HESITATION now every function expression is essentially a constructor in Java script now this is an empty one there is nothing inside but I can actually act properties to it are directly I think it's a case dot I equal to la CO I can seventy five property our default value for this property I or I can have %HESITATION rob property J. which would be J. yeah I bet I pass okay aren't just like any other town constructor com this is a constructor aren't I can also I can also write methods to it here I have a matter I get che which returns the value of and the property J. so this is an example of constructor now I can actually create instances of X. from it using a keyword new I can create objects from a I as many as I can icons all I have to do a %HESITATION is variable name let's say I'm gonna create excellent comics on the net to see new X. Jim is a constructor I'm I need to pass this Jamie which I can pass as one okay armed I can say ex to equal to new ex to okay so I have two objects and the first objects value of each property Jay is one and the second one now yes property Jay is to on I can look at it by consulting it out I can say X. one dot get J. now when I do that let's see what happens %HESITATION when I run this I get one by the way I'm using gestured over here on my can do the same thing our thanks to when I run it I get one into six ax one in next you are instances of ex DR actually distinct optics which means they're two separate objects are they created from attacks so inherits all the property all the methods and properties matters so it inherits on the property and matters from ex ex is technically parent clock class for in each object you would find D. matter get che so if I create housing objects from banks each object would have its own method get change which is kind ever done so the solution is for I do understand I can I'm gonna take this matter and make it a prototype matter by are ready X. stock proto type dont get chase and I'm writing outside its function as you can see it's not inside its function it's it's a task to be correct property which I told you earlier that every up every function has a has a property called color type some attaching this matter to that I that your property now it's automatically available to X. one X. two even though it's not part of this so let's Londis if I run this I'm again getting wanted to which behaves exactly like yeah you speak it before the only difference is now X. one NXT is not have its owner matter get che included in sight instant instead our whatever I called takes one dog get Cheney it looks it up into the prototype chain it looks up into the parents %HESITATION into its parent and so see if you can find %HESITATION that matter in the prototype annex finds it and I just use it from the parents so it's using Texas matter it's not inside ex one so that's all occurred had and essentially now this way the objects are much smarter you don't have to have all the matters inside the object you can use it from the parents prototype so this is what constructor is in not challenge ostrich every object in Java script created from this master object spelled object wait captain so let's see if I could a constructor variable X. equal to function products in MT I constructor and if I want to look at it where it was created I can simply say console dot D. I. R. X. R. D. IRB's consul dot DIR basically allows you to look at the object in much more detail so if I run this I would see this soft function acts and if I expanded as I can see something called proto here so the ax is create basically what it means axis community from our days are Kroto another object construction and if you expand this it has a bunch of matters and properties and at the end it has another underscore underscore pro to underscore underscore are which is object which means function is created from this monster object or mother object whatever you call it and it also has a bunch of properties in matters are so basically ex is ultimately created from this opt and this is what the card prototype Cheney X. is created from function and functions creator from object the mascot and everyone of them have everyone of them have a prototype property and a product Roach I passed blank checks matters of property so annex can have access to all of them to prototype Cheney so whenever you call a matter if it's not available inside acts would look it up see if it's a function 
4: welcome to Texas to toils this tutorial we are going to look at issues with the keyboard of our physically menu defined a variable using Varr of the are going to look at issues associated with it mainly into scoping issues and hoisting and we are going to look at some solutions the keyword vara is has been there ever since Java script was created %HESITATION banking ninety ninety seven ninety eight Wendell chalice group was created %HESITATION it wasn't a very serious language you would just a simple scripting language that %HESITATION nobody had imagined would become this dominant so there were it was design had been hastily and the remnants off some of the mistakes that were made back then still exist and bar so we are going to look at them a one of the biggest mistake at Chaska pass what war is we need to find a valuable using keyword voir you that variable gets what is it called function scope function scope what it really means %HESITATION it means when I define a function and a variable that is defined within the boundaries of dysfunction it's available to out to function so let's say I have this function ax and I am going to define a valuable why using keyboard bar %HESITATION it's equal to let's say one here so this why is actually accessible two out dysfunction so this is the area where it's accessible if I put %HESITATION %HESITATION console blog here I see if I can access it if I run this I would get one which means is accessible now if I take this console log from here and put it outside this %HESITATION function let me clear it and if now fire on this I would get an error says why is not defined so basically he doesn't respect any other boundaries but it respects function boundaries no longer languages so they don't have function school Dave Dave they have what is a call block scope and what blocks go bears data any block that is basically open body between open curly bracket and close curly bracket it could be an if statement so if I have if and the violence if I put this variable inside here I'll block scope means it should only exist between this block %HESITATION mostly because you know when you do find local variables to this if statement they should only accessible inside and they would die I once you exit this how block they get garbage collected into Oscar %HESITATION but the problem with warriors it doesn't respect blocks boundary it only to specs function boundaries which means if I do consulate here it will still exist here which industry does not respect its statement or four statement boundaries and this is a huge issue %HESITATION and the problem is let's say if you have a S. if statement here and if I have another statement which is doing completely different logic and I want to I'll have another variable why here I cannot happen because this why it still exists here now redefining this variable inside what creating each more creative problem but it's super computer up another thing about another thing about %HESITATION scoping in Java script is that jobless he fought follow so what is it called lexical scoping %HESITATION which means %HESITATION thinks defined outside is available inside so now I hear how function ex and the line is within and dysfunction tax but then function X. has another function cozy so if I try to access this valuable why inside of his if I inside of the Z. and I can still accesses I did it because I as I said before the function scope for ex is throughout this which includes Z. so why is also available inside seeks to get access it inside from Z. %HESITATION so let's say five Andi's I get one so the next at problem area for VR keyword is hoisting hoisting is in English language means left something up or raise something now so what does this variable has to do with raising something up let's look at it so we looked at that the variable that is defined inside a function is available to out the function %HESITATION however if you look at this %HESITATION I have defined this variable at this point here so but what if I put this console log before the definition of why what do I get so if I run this I get undefined which means it is still accessible I haven't given it a value it did not give me an error so for example let's say these know very well why I %HESITATION Z. here right if I do Z. it would give me an Aris Izzy's not define so it's not giving me this error saying why it's not defined if I Cohen so log here %HESITATION it simply gives me undefined means I have defined a variable but I have been assigned any value to it which is correct so that's when the whole esteemed really meets what it does is armed whenever you define a variable within the body of function %HESITATION the value is available value one is available from that point to the end of the function but before this valuable it gives you why equal to undefined so what it essentially does is who are why this means wise undefined and in this point here it would give it a value so why is actually the debt definition of why was hoisted to the top even though it was defined here as a programmer you're not you're not expecting this and when you get this you aggressive price and sometimes you don't know why things are happening the way it is so one way to do it is when you want to do something like this don't do it all ways define all the variables at the top of the even if you're using %HESITATION somewhere inside %HESITATION who do this and how do this when you wanna give it a value so I usually when I use it when I'm using far I placed all the variable manually it's sort of program it insert Dallas keep doing it so that actually I know what's going on this is also another %HESITATION confusing interview question when you go to an interview into your can I ask you this really silly question that I think it's kind of unfair but this is what they would do they would say l'article do one and they would give another definition of why here somewhere save our why equal to two or something and 
5: hello and welcome to Texas to tourists on this is a brand new series on starting on ECM is six water people clan easy mistakes or E. S. two thousand fifteen or PS two thousand sixteen to another question on basically it's a new version of Java script that is some of the features that are already implemented or I'm going to be implemented so look at it and on the first functionality that up shows is called fat arrows you must have seen it it's like got equal sign and a great insight %HESITATION fat arrows are one of my favorite addition to jobs that I've seen a lot people using it too much now in their libraries but I would say there's X. there's a use for it and you should only use it where it's needed where you can actually utilize it's power so we'll go to it let's get to the coding so before you do that %HESITATION you wanna make sure to use a browser that supports fat and so right now I'm pretty much all the leaders browser do however I would recommend using chrome because of its %HESITATION cool debug from charity so you use the latest version of chrome and the first thing I wanna do is you wanna use a sentence you lose strict you wanna use strict more not because not only because %HESITATION when I you want to troll errors when you don't define a variable and things like that but also you wanna tell the browser to use %HESITATION the latest functionality now I'm gonna create a function in a similar five %HESITATION way so here the function get a all he does it it there's an argument eight and he returns it back I know you would never use it but %HESITATION just to show an example you can you can convert this into using federal %HESITATION simply by saying let get a equal to a fat arrow a basically the function replaced by the federal argument comes on our left side and then the body of the function %HESITATION goes in the right side now here you just doing A. N. returning it you don't have to really explicitly said attorney if you using like a one liner like this %HESITATION and it would work fine so for example if I if I college to appease the common descrito fine do it %HESITATION to get a one consular it should return me one %HESITATION it returns the one I now look let's look at a little bit complex example let's say if I wanna I do a square often number %HESITATION so here I would just simply say you a I square and insert of a I would say E. multiply by a so basically whatever argument you pass I was gonna might multiply by itself and who turned me which would be a square of the argument %HESITATION and I'm not checking here right now find you know if it's any teacher or not just wanna show you how it works so fine I say %HESITATION square would abilities to do too so you a sad if it really works I get up for which means it does really work now this is a night nice feature however I would not use it exactly like this %HESITATION instead I would do something like days if I in a separate line how I can say square and I would put it apprentices around its and here I would put curly brackets however when you put the curly brackets around it %HESITATION I would he was returning because otherwise he would not work so this would be %HESITATION more reasonable syntax than this even if you're using a one in a one liner so funny removed this and run it I will get for which does the same thing let's say you not possum any argument and instead you have a outside somewhere %HESITATION like say can help variable a cool to for knowing Joss could get past %HESITATION you you really have to pass a variable it'll take it from scope so in this case I would just have to do this and it should give me %HESITATION sixteen so and US so whenever you not passing the argument you make sure that you use and the parenthesis %HESITATION you cannot just puts %HESITATION simple space now you can however you can put underscore this were exactly the same I would not recommend it but it works if I use underscore it also works some people are okay with underscore because they are using underscore dodgy as a something on the short but %HESITATION it works now if I have a multiple arguments and I'm gonna pass it's a fun and serve square I wanna say multiply I can say malt and I get past a and B. E. two arguments and it would return me and be so for this I can say to multiply by four so they should give me eight and US so this is some basic functionality off how federal works now let's look a little deeper why are we using federal there are some special things that Pat or does that regular function doesn't okay let's look at this particular function here are a function acts and inside I'm setting a new value %HESITATION called this stock valve equal to one %HESITATION and I'm also a setting a time out and during the time out I'm incrementing the the value of that and by one no I have looked console dog %HESITATION to to see if it's really a in committing a not so what I want this I'm getting up on an oracle letter number it's probably doing it here because it's big because I said this stock fell inside did that said Tom I function he doesn't recognize this because this inside the set time I'd function is actually days of that function itself %HESITATION scope so it would be for this particular function he doesn't recognize %HESITATION the outer this you know to solve this problem you can do something like this you can say you can introduce a new variable called that equal to this and I get past uses that %HESITATION inside here and that would do that would solve the problem %HESITATION let's look at it it's at that time now and it gives me to so it really works but a federal really does not have its own this which means it's going to use its parents this are in a bind it it really works well so here in the example I will distribute this that thing and inside I can replace with again this and insert a function are I will converted into the fat arrow and now if I run this %HESITATION it would give me to now there are times where you want to use %HESITATION the functions owned this at that time you do not want to use Farris it it 
6: rune hi and welcome to Texas tutorials in Java script functions call apply in buying seems to be doing exactly the same thing but there's so much confusion around it and when to use it how really works %HESITATION so when I started learning javascript it was so difficult to understand it because you're doing very little documentation available on this and whatever I find conf confused me even further so are based on my understanding so far I have created this very simple tutorial to explain it to you the difference between call apply and by traditionally of objects %HESITATION with properties and methods %HESITATION and each object would have its own properties on matters of for example here in object one you have it's own properties in math or not to have its own properties and methods %HESITATION but in general it's great you can do something on a more interesting are object one can have its own property object to Kenny has can have its own property and %HESITATION you can write methods separately and using haunted apply or blind %HESITATION you can use this matters on this objects this way you can write common matter for various objects the best way to actually learn is by coding so we are going to do some coding here %HESITATION I'm going to use this wonderful that psychology as fiddle dot net to actually %HESITATION demonstrate our call applying function so here you can ride your east he learned this block a CSS in his block and Java script in his flock and when you when you click on run it executes and now do the result over here and the bottom here I've opened up console as well so now I'm gonna start by building an object so we have an object called Toby Jay peak want to I no to so this object has a property call non it has a value called to and I'm going to have a variable and to produce equal don't function and our it has an argument a so and it's it's also very simple function audit does returns this dot non plus a so let's say if nam is two and is too many return for now as you can see this object does not have any met her associate it with like add to this and do this Mathur I does not have any property call now however it has this a it's returning did start now so if I wanna up if I wanna take action on this object using this math third I can do it up to five using a call function so the way it works in this first first you would I'll %HESITATION you would take the matter which is sad to this dot call whichever function you you want to execute you could you put it first and then don't doc call and here you would pass two arguments the first argument would be %HESITATION object your applying this now this function is to calling this function to %HESITATION so which would the object and the second argument would be D. arguments for the function itself which would be a here so that he would be let's say from passing through here okay so the function is this the object I'm passing here and the argument is coming from here okay so in any way you you're you're you're saying function our neighbor names function name dot call is object and then function arguments this is what's happening your function name dot call in in the arguments we passing the object and and arguments for the function itself goes here okay so let's not console dot log this thing not if you don't know consultar log would basically print out a result off did this operation I'm because this function returns around this time now plus a so far I run this I'll get five so what really happened here is this function was called for this object and the the property of the object was access using distante nam and the argument three was added to the value because it numb this thought now would be to plus the argument would be three and then the returning fire so that's what it is again if you have any confusion question feel free to arm send me an email or a post down message there okay now the second thing we're gonna marry as well call okay here also what you can do is let's see if you have multiple arguments at say five if I have any be and see okay and what I what I'm doing is I'm also adding a be and see here now how do I pass these three arguments into one so I would simply %HESITATION I can simply write these arguments you directly the first argument has to be the object itself that you you are calling this a function to and then at the three arguments in this case the result would be one plus two plus three plus the now which is to so I two plus one which is three plus two is five and plus three is eight so if I if I run this by them you can clear the console by using this I run this I would get the the answer eight here so that's what you that's what are the call ducks it attach its %HESITATION dysfunction to this object temporarily and then run sit and gives the result back as if it's a part of this object itself I'll call is very similar Tom but instead as you go you see here can have arguments ABC instead I can actually create an array here I can create an array call are the rate equal to one two three and I can just copy this basic here insert of call I'm just gonna replace it apply and instead of this arguments one two three I am going to pass this array of arguments so it's going to be a are so the syntax was not much difference any dust free was exactly the same so if I call this yeah because Aldo Sam if I why not do this and if I did did this it would also get eat so I don't have to pass all the argument I can combine all the argument in an array that's the only difference between Carter apply no buying is a little different our heart is a fine work let's see so I'm just gonna %HESITATION disconnect take some of those things out also the safety of our another object whole object to 
7: rune hi and welcome to Texas to Torio today we are going to understand objects in javascript so first step in understanding object oriented %HESITATION Java script is how to create objects in javascript and then we gonna proceed to arm adding and removing properties to those objects that we just created and that we can add some matters to a and our %HESITATION it's not gonna be complete without adding some private variable and matters %HESITATION November this is very important out you know to to achieving camp caps elation in Java script and last but not least creating closures are this is some exciting programming Andi can do what closures and %HESITATION but before that you have to understand how to %HESITATION called objects works in Java script so let's start out Fuisz creating the objects in javascript I would categorize Jones could John checks into categories non functional objects and functional yes functions are also on in jobs now let's do some programming first of all %HESITATION if you not familiar with this website problem this is a wonderful that technology and spittle dot net it so it's called Coldplay Graham R. which means you don't need any server %HESITATION to actually try out a chalice could ease TML NCSS here on this first block or you can write me civil code %HESITATION your CSS would go here and then you can write a Java script here and then you would see the result directly here so are no without any delay let's start writing our first line of code so I'm going to create an anti object are it's very easy all you have to do is save our X. equal to new object this actually creates a new object in Java script I'm now how do I really know it that it created this new object on there is that wonderful debugging tools are that's provided by chrome and Firefox also provide similar to ours so but I but I prefer %HESITATION Krumm because sound they're constantly upgrading on so in order to get there if you right click on on your browser chrome browser and thank all of %HESITATION you would you would get into this at this this panel would open up at the bottom people we would open up on site here on the right side here %HESITATION but either case you would see this about they're bunch of taps here on the most important thing odd to tap right now that you insert it as %HESITATION consultar if you click here now you can actually see this op disconsolate area now in order to of find out of disk the object was created or not what I'm going to do is Tom I'm going to write %HESITATION a line call console dot block and I'm gonna pass annexed to it what it really means is I want to see this object and hop in in in memory how's it created %HESITATION so if I just run here said this place here right here on on a on the top five when I run it actually excuses code and as you can see our it showing the MD object call object our and then on opening close curly bracket all this is an anti object are you can also create an anti object by I simply saying to call their very why equal to open and close curly bracket this also created on T. object is exactly the same thing are as the first line so let's see if it creates what we expecting it to them so I'm gonna pass why here I'm gonna tie deserve our support here but tidy up click click here a tight tidy up to code I doesn't actually do I want to go tidiness but it it does the any horizontal kind now when I read it again I would see are also you can actually this button you see here are which clears up DD lock so fun running again I I might wanna cleaned up before I wanted so then the previous run doesn't get mixed up with with the new rock if I click here get I can seem to objects %HESITATION and they're exactly the same there's also another command called DIR %HESITATION when I do this it gives you a bit more detail inside the object arm and when I click here is you can see it's it's giving me up this proto are we're going to it later on I just wanted to know that this is available to you seeking look idiotic king and much more detail now that we know how to create the anti object I would suggest a second matter is much efficient wow and clean on but you get a as I said you can also use a first matter now that we know how to create an anti object we will create an object that some properties and matters so to create something meaningful pizza equal to this is initially will create an auntie object and then here inside we care some property so the first property will ask is crust we can now use colon to separate the property and property value so the property value if you would be set let's say and we can use karma deuce to add another property called topics and the toppings would be three plus a number so that the Christ is a strain topping it as and number and then we'll add another property call has you take it now this property would be true means yes it has taken this is a boolean I will add another matter to call com how so maybe topics okay it will return and the number of topics so for that instructs adding a property value would just and the function yeah in between here we will simply say return this doctor toppings no P. attention this are this keyword actually allows you to access any properties and better than the subject any public properties and methods crust toppings has speaking to all public properties %HESITATION and how many toppings is also a public matter so we can directly access to public properties and Matt matter using are dot notation this and dot Ritesh so here will return treat now this is our objective we created now let's see how to access the properties %HESITATION we can simply do it by using dot rotation by saying dot Christ this would give us I think how do you know let's add console log and we'll see okay as you can see it's returning thing I can also do has bacon which will return you as you can see is returning to 
8: hi and welcome to Texas tutorials out today we are going to look it is very interesting function expression in Java script what is I I S. E. some people call it self executing anonymous function some people call it self invoked anonymous function some people caller immediately invoked function expression they're all the same we will look at what it is and how to use it I would some code examples first let's look at what else function expression is in Java script well this is usually how you work right functions and pretty much any any language but in Java script you can do something like this and you can use it or executor in walk it what do you call it I'll buy calling like I said just like you know you would cardinal function this is called function expression now let's look at what immediately invoked really means usually you would define your function like days and you can invoke it at some later stage like this noggin you know I can have some other code here and I can call it again here I can use this function again there are times when you want to execute a function right away as soon as you define it and in you not gonna call me begin arm but why would you do it will look at later but that's forced to focus on if you if you have to define it and executive in the same sentence how would you do it if you not gonna use it again if you not gonna invoke it again Dan you don't need is to statements will you define it and and and invoke it you could invoke it by simply removing and then do this it would immediately and will get you can pass that argument here so I can pass I would say Gee here will look at the use for it later on but first I want you to understand how to ride the syntax this function would be immediately invoked and the argument I'm passing J. passes I inside here it's also an anonymous function because there is no name unlike increment here there is no name for this function that's why it's it's an anonymous function there is also another way of writing this if I can could this around it brackets around this function like this this is exactly the same thing **** press this it is another way of writing I personally prefer the first first matter if you're not returning any value back you can also do this you can put your code here this also is the same thing there are also other ways to do it we're gonna shoot all the way so just in case you know whichever you can put a Tilda in Syria skin destination you can also put dash we can all support plus sign they're all valid syntax now that we know how to write it let's look at where to use it and how you use it are one of the user usage is gone many fine I'm sure you probably used Jay curry in your lifetime and I'm here is a good example of how many flying let's say you you importing a library Jay curry you would have an object call window to check J. card but you can actually many fly this to a dollar sign using this not immediately and invoke function if you look at even if you look at the the entire G. Craig library itself it inside out immediately invoked socks expression so here on passing window to Jay curry and inside I can uses as it as it's a dollar variable it's really cool this is also reducing my school look whenever you hello there a global variable on and you try to use it dollar sign is only available within within this function so it's not gonna go out and look for windows to Jake very so you take your your code is but faster this way it takes a global object which is windows dachi curry and make certain local for this critical function I am fees are closure that helps you establish private matters was still explosion exposing some properties for later use so here is a a simple example of creating your own javascript library this is a very simple idea you would never write a library like this here is a immediately invoked function function expression on it it executes a right away and then whatever turns it copied into our this valuable coal counter inside his function there is a private variable which is I equal to zero arm and is returning are this object would with TI matters are these also private the first matter is get it just simply returns I second use the second matter said Tom if you pass a variable it sets Tom I equal to that where it will and then third matter it just simply increments D. I I by one so this is also a closure which means because it's a it's a a private variable it's not expose outside if I try to use if I try to use variable I outside I would not be able to so it gives you with us and it's not polluting the did a global space and all key functions are only available using counter dot because if I do get get here he would it would not be available because it's a closure it also holds this variable inside so it's persisting the variable inside on I'm not gonna have another tutorial enclosure you can look at it I'll put a link here but if you if you exited his function it would give you the first one the first statement would give you zero because I easier initially then you can set it to five and then I becomes far and we need incremented it becomes six and you can actually get the value out by using this so this is a simple example how to write a Java script library now using on immediately invoked function expression I hope you learned something from the Odyssey toil and if you did then feel free to like but to toil and subscribe to channel so you can enjoy the future tutoriales thank you and also let me know if you any questions are using common section 
9: hello and welcome to Texas to toils today we are going to talk about spreader operators and rest parameters in E. S. six that is Java scripts latest version this is how it looks like Caixa we dots and a variable name %HESITATION never reminds me of %HESITATION when I speak read Barbara my toast %HESITATION just like this and it leaves a mark %HESITATION from making headway because it looks so delicious okay jokes apart just like %HESITATION plus sign or minus sign you know they are operators spread operator is also an operator basically spread operator's spill Reds own demand okay I will function here and I don't know when I exited this function how many primary I'm gonna pass to it %HESITATION because we want to see or hundred I don't know so I am going to put Matt operator as a parameter so I'm just gonna put %HESITATION dot dot dot then and that will be sufficient inside the function this N. becomes an array and all the proper that I passed are the elements of theory in that order so I can do something like this console dopp log and so far I run this one two three four how did an array of four elements which is one two three four now you must be wondering would imitate why do we need this doesn't chalice keep already have something like this I mean and it's even simpler are for example you don't even have to pass any parameters you can simply say this means I'm not passing it rumors inside you can use the object arguments so why do we need another operator to complicate things well this argument thing really works however there are some issues with it first of all %HESITATION when you don't pass anything you do get the arguments object here like this but this is not our way so for example if I console %HESITATION I get one two three four but this looks like in a way but this is really not a right it's an already like object %HESITATION which has few puffy things you can you can find the lead but that's about it so usually when you have this you have to do this to convert the arguments into an array you have to do this and this will convert the arguments object into a real hurry %HESITATION the shortfall also is you can also use something like this the simpler way of doing it but it doesn't say anything however you have to do it you don't get the V. of very directly yeah but then you like %HESITATION so all I have to do right of one nine so that's not touchable well it turns out %HESITATION the argument is not arguments object is not very efficient that's why we needed it so spread operator would spread operator you get better performance also you can do something like this you get to a be see and then the rest of parameter and here I have a BNC parameter which I already know and the rest of the progress I can see and spare parade means I don't know the rest of private about I know two parameters so this you cannot do in the arguments hopped so here I am passing EBC because I know them and the rest I don't know so I'm going to pass the spread operator that's why they call it the rest parameters because I don't know the rest it was a joke so when you pass an argument using sparrow operator is called rest parameters there is also one more advantage outside the phone outside the function when you pass argument you can posit as in a way so here I can do something like this something like this and I can pass the S. as a dot dot dot then no the spread operators I'm not only for the arguments you can use it somewhere else as well because their operators means you can you know use it anywhere else where this operate is needed for example arrays let's say I'm in a hurry called life equal to %HESITATION born the learn to walk learn Java script in the middle I don't know what I'm gonna do some discuss a do what ever the spread operator here and in the end I go to haven't so I don't know what I'm gonna do in the middle so I was born %HESITATION I learned to walk I learned Java script and middle I do some stuff right and in the end I go to have I can replace to know whatever with anything so I can create another a because of our do what ever equal to have fun have more phone have even more fun and let's say if I console this life out but so what I get I get a full array so this is quite useful you can also do something like this if you want to combine to erase %HESITATION let's see very a equal to one two three and already be called to four five and six you can say a dog Polish dot dot not me this basically combined sewer a so vital consul log a oddly combined way now this was not possible before before you have to do something like this before you had to do something like like this where you do have a prototype push apply Ian be so %HESITATION who works out fine and this too arrays melts like butter on the terrorists you know basically it spreads nicely if you ask me so that's all about %HESITATION spread over a year and rest parameters I hope you learned something and if you did please Sir like the video and provide the comment that's a scribe for future cool videos I have a whole new series of this year six here operator hyperlink so you can look at the the other cool VS six Williams thank you 
10: welcome to Texas a toils two navy are going on about currying in Java script I know some of you guys are very excited I when I said curry because you might be hungry but it's not what you think however if you really want to spice up your Java script code you can definitely use some curry and curry of it's just a part according is very useful and you ask it was %HESITATION originally developed %HESITATION in a programming language by this guy call Haskell curry and hence the name curry %HESITATION you can still find it in some languages like Scala has it and has a native currying function however Johnson the functional language and it does not provide this need implementation of calming but what Java scrip para something very useful Scott closures so we're gonna use closures to bill curry function first we are going to build a very simple example and then we could have built something that we can use I'll use for example and then some crazy one how so let's get started though in this example we can is build a function call add and this will have an argument a and inside it all is going to do is return another function what the argument be and this function will return a plus speak fast simple right okay now so when I run this ad function it will return me a function not of value so I can do this I can save our aha add to five equal to add five now that two five is another function because you know it exited at with equal to five and it would turn me another function now what this function would look like now remember %HESITATION easily passed I haven't passed Beit so this returning function %HESITATION would look something like this I thought it would have eight as explosion site so it's essentially does at two five function is essentially this so whatever I passed inside this it would best that basically add five to that if I pass one it would become six I've I passed to it would become seven so let's sell less Andi's leg in the console not log and when I exited dysfunction ad to five with one so this should return me six are less execute this yes it returns basics now this is all fine that's a simple function you can see the use of it it doesn't have much use I mean if you wanna add to function you can distill it right you'll need to use this in the next example is sure of this are adding functionality keeping inside as as a function I'm gonna create a separate curry funk and the %HESITATION Israel added I'm gonna create average function so let's do it also many use us some ES six features I know chrome and Firefox %HESITATION had already permitted summer though though those %HESITATION ECM is six or E. S. six or whatever yes two thousand fifteen functions %HESITATION someone to use them okay so first what I did I created is a function call AB average folks ABG %HESITATION as an average function mount and it has it takes a number of arguments this is how would you write and he has six three dots and and which means it takes and number of so you don't need to know in advance how many arguments you passing and inside the member in E. S. five you you you would you don't even have to pass anything in so you would have an argument %HESITATION arguments %HESITATION variable and which you you can %HESITATION basically spliced slice and I get really what you want but here you directly get an array %HESITATION and so I can use that array and inside with all the arguments and I'm calculating average of all the and numbers now I'm gonna create another function because spice up this is going to spice up our code %HESITATION basically it's gonna career so it's a function of the first thing you will do it will take function as an argument so I can pass is average function %HESITATION as a callback functions and you and it will also take a bunch of arguments arguments and number five minutes and %HESITATION so it has it will have this up and available as enemy now it will also return like previous example it will say in return %HESITATION what I would do is I will return to function now this function also takes and number four elements but to not be confused with this and I would just going to say and so I have a %HESITATION arguments as an array and well what I'm gonna do is I'm gonna take these arguments which will be a closure and Simon were and pass example we looked at that and I'm gonna content with the M. arguments so I can do this using begins a N. dot can cat I am this would give me another array with the boat can cash I'll it the function I'm I'm I'm passing here I'm gonna use that function our and I'm gonna pass does and Monica at the end because I am arguments I can use apply function to do that second to Afghan dot apply %HESITATION I'm had to pass this and then the arguments if you don't know about I apply I have also to toil Kel %HESITATION called applying buying very useful on I provide a link here just if you don't know but right now I need to explain and I'm taking a a function apply on the function name and apply it in whichever argument I'm by need to and it will take the arguments from it and it will be easier to execute this and when I returned this so %HESITATION now let's see how it works so %HESITATION I'm gonna say variable do and rich equal to by so and forcing a minute of my pop past this this average function and then I'm gonna pass and number font image one Tootie okay you already see the average of this three numbers is to now I can just say console dot log and take this do average and I can pass to hear inter of pop passing it on an array of disk in a passive one %HESITATION number which will take over as an array because here %HESITATION this would be M. so it's an array with one element basically %HESITATION when I run this no I actually made a mistake here it was as the average when I run this idea to which is correct no I jade I actually I can here I can just pass another great one four five six and it will give me three point five which is correct so now you can see the use for this because %HESITATION doing the averages were expensive %HESITATION function right 
11: hi and welcome to Texas to toils todavia are going to learn about that burgers in jobs can't fish you're gonna decide what worked best burger is and then we gonna do some coding and I'll give you a simple %HESITATION example the date you can to stack Java script is a single credit application which means you cannot run more than one script at the same time let's say you want to my new place and dome in your honor user interface and at the same time you're trying to do some complex calculation now the complex calculation can hold the update to the U. why and make your page should look unresponsive I'm sure you've seen this %HESITATION this warning where it says are under sponsors script now do you want to continue or you wanna kill them the script you know I am the all have slow applications and the act as we add more funk sanity's %HESITATION your application start to get become slower and slower you must be wondering how Ajax are we going asynchronously isn't this %HESITATION actually multi trading the answer is no that is called non blocking which means why'd you do something you wait for something else to happen %HESITATION it's non blocking it's not multi threaded it still using a single thread hands it's I'm a single credit application now that worker pro whites ami Kennison to spawn separate script in background awfully of application of where you would where you can do any kind of complex calculation without disturbing to you why it's almost like you delegate some work out of the worker communication between page and the worker happens using a simple reconnaissance are they can send messages to each other using post message Mathur and they can receive messages that they send to each other using our on message callback function so let's look at a simple example are in this example my page wants to add two numbers together and it will delegate that work to worker and the worker would add this to number and return the results back to the the page such a simple example let's see how it works so the first file I have it's cold that burger tested each team now are here I am I don't I'm not writing I don't have any HTML component to simply a script and all he does first line a does it say how check if the VEF order from Chinese available for the browser %HESITATION for example some proud symbol browser may not have %HESITATION this functionality so just checks for it and if it's available then the first thing he does it eight it creates a new that vertical using this constructor so you would say of variable mine that bird pretty cool too new Verkerk and the file name of the worker functionality the second thing you would do is create a message so it has two numbers it wants to at so would create adjacent object %HESITATION here it's called message equal to and it has a property call Agnes and within this property have two numbers number one and number two number one and number two and then adds values one into I hear it's one and one so it's going to send this message are using this third line which is called mine worker got postman passes object to the member now let's look at the Verkerk file so the work to file now all you have is a simple function %HESITATION call on message %HESITATION which is wait for any activity are from the from the page in this case when when you when a page send I'll post message I it would deceive using this on message a callback function I hear of it would receive it would receive this Madonna this object E. our E. it's a wrapped object which means %HESITATION it would E. has this data property and the data property would contain the object at this that we sent from the page so first checks and it's available and if it's available then it wouldn't it would take that property and this and would find this to numbers and at them together and again it would wrap it in now %HESITATION in another object what could result and it would post a message again I know this is posting back to the page so if you go back to the vet for a girl got a work of network a test on HTML %HESITATION it has also call back on message function which would which would weigh for %HESITATION any response from the worker and here in this because it would receive it and now it would extract that result out from from the object it sent %HESITATION using E. dot date on our result and it would consummate how so here I have %HESITATION under localhost on running this server and I'm gonna run this %HESITATION that burger tester he's team now and when I do I'm getting this result back to if I do fight change the code here and change the number to the tree save this and run run this again I will get for so one plus cheese for if you look in this not shall %HESITATION you have windows face and your workers space from video space %HESITATION I'm making a post message I'm writing a post message I'm past the object and on the worker space it would receive that our message %HESITATION and it would in the callback function you would use that object to do something you know it could be adding our you know doing some combat complex kept calculation I would have any wood and in the end it would have some results and it would send the message back but to the page using post message and again on the window space you would have me on it would have the on message callback function are which would receive this %HESITATION message from the worker and on which would be a result anybody the posters all who do something in update that don't be using it out whatever now because vet Verkerk runs in a separate thread he does not have access to %HESITATION document object vindos object or paradox which means he cannot do any domain inflation from the worker from inside a worker however it has access to navigate it has access Medicaid or object which means stop it has acces user agent geolocation Q. cookie enabled %HESITATION it also has access to the location object we just read on the host host name at Sharath path exists up it also has acces exit XML HTTP you can make it out execs call as well you do timeouts and things %HESITATION beat it also has access to application cash and from one of from one worker you can actually spawned other workers in you mean delegate some word out to other workers are you know you can use import script a method to to to know other workers as well all have a separate tutorial which would explain some advance %HESITATION web workers and last thing you can terminate the the worker %HESITATION using my worker dot terminate function hope you have learned something from this tutorial if you did then please are follow me on Facebook and Twitter and subscribe to channel like the video and provide some constructive comment or question if you have 
12: welcome to see Texan tutorials out today we are going to learn about callback functions in Java script of which are also called higher order functions now if you have use Java script you probably have already used callback functions if you haven't then you haven't done a real jealous get programming of so they are very useful and let's understand what they are Injo Oscar functions are actually first class objects just like %HESITATION you can pass objects into functions as argument you get past other functions in two functions %HESITATION as arguments and exhibit at some point so that's a good example up here in this example I have a function acts and then another function why no function line up has only medical clawback I am a exhibiting this how of function call back then %HESITATION in function why when executed I can pass ex of which is a function as an argument as a callback and it would execute inside why now if you notice something are function acts we are passing into why as a function body we not exhibiting in passing the you know the results we just passing the function by itself %HESITATION into for about into another function and %HESITATION would get executed at some point also if I run this the first line gets executed consul lock do something and then the a EC function excuse executed which basically console locks you know I am called from inside a function so this is a very simple way of doing it now you can you could be doing something before or after this callback function it would work fine no this is a very simple example of a callback function but just like anything when you're learning something you need to understand why are you darting dates right via the why do we need a callback functions %HESITATION so I'm going to give another simple example of %HESITATION some doing something without callback function and improving using callback function so you can see the real you is off because I am in the and I'm gonna give you a real practical example that you cannot then you can apply in your coat okay so I'm going to build a simple function call calc on and what is going to do it's gonna it's gonna take two numbers as arguments first to our numbers our and the third argument would be calculation type %HESITATION and then inside the function it would based on the calculation type it would decide what to do with two numbers so for example if the argument third argument is added it would add these two numbers and return %HESITATION if it's %HESITATION multiply Danny would multiply these two numbers and return the result Armonk so inside the function I have to make that decision so I would say if %HESITATION calc type equal to add then I would return a basically number one plus number two up symbol right else if the calotype is that say multiply then it would simply and it turned the multiplication after %HESITATION desu numbers so it would basically doing this okay it's fine notify execute this I can say cow two three and at thinking console on now when I read this oops I as a married here though I have felt as if okay fine again I would get five I know this works fine all but let's say if this function calc is a part of some library %HESITATION just like jquery library and are user in the supposed to use this library and passed the number and calculation type and should get the result now in order for all of the possible calculation type this library has to implement all of it right you could be passing adds multiply substrate or it could be some random operation that %HESITATION elaborate people have not thought about so what is the best way the best way to do it is make this function as abstract as possible %HESITATION in order to do that we can bring the the functionality added multiply outside we don't need this inside the %HESITATION for this function so what we can do is we can take the whole thing and weekend actually %HESITATION build this function outside so we get to add is a function which takes two arguments a ND and it simply returns a plus beat fine and I can have another function call multiply and it simply multiplies is two numbers and returned to now here in the calico function I thought I had to do instead of calc type I can to simply say call back it's a function and inside I can just execute dysfunction just like we lived in a previous example and pass number one and number to now here in surpassing the string at we gonna pass this function itself now let's look at it if it works frankly and this and Cletus well I have to actually bitterness and he returns me five so now it's sort of ad I can say multiply and it would multiply this number and give me six I I can even create my function you can see the use for this %HESITATION call the function because as a user I can create any function and pass into this library any would give me this result Tom I can say %HESITATION let do what ever %HESITATION that's it's a function and what he does eight it's simply that at times it consoles it back numbers here you are you two numbers back and it basically give us the numbers back okay so by putting in this and run this I have the really passed this no I made a mistake function 
13: hello and welcome to Texas to Torah today we are going to learn about promises and Java script promises in javascript it's pretty much like promises and realize your kid makes you promised to clean the room by end of the day either by end of the day he finishes this promise by cleaning the room or he feels a Java script %HESITATION promises are similar we will first look at a simple example of promise and then we will understand why do we need prior and Joss group and not even look at example where you have dependency where one promise %HESITATION depends on the second promise to finish so firstly this is how you define approx you would say let and this is the name of my promise equal to %HESITATION new promise this takes a callback function and this callback function has two arguments the first arguments is the results and the second argument is reject the resolve really means I'm fulfilling his promise and I'm resolving it means you finished what you said you have you would finish reject man's promise is not fulfilled %HESITATION and given time or doing constraint and rejecting it so you have two things either resolve it or reject inside here you've first thing you would do is because it promises to clean the room which means you're gonna clean the room so I'm not gonna write data how to clean the room in javascript so I'm just gonna write a comment data cleaning the rule now when the cleaning the room is finished high oneness set up some status right so here I'm just gonna equal to trip is coming in the room is clean and when I was off it so simply I would brandy function resolve which is you know to callback function you mean else I am going to reject it move the first part is to do what you supposed to do how the promised to do something so you gonna do that first a and then the second part is to either result or reject with business profits the second part is even executives promise this could be taking to the bit longer time %HESITATION you have to wait for it and there is a matter %HESITATION that gets called when the promises he stopped and I would just call Dan so when this matter is fired which means the promise is sysop so within this %HESITATION matter %HESITATION you can have a callback function and because it's only executive Wendy the promises all the room is and they what I can do I can receive the status back are from this is all function so here I can just say clean okay %HESITATION so I can say from there's all which would be this so when it's in his songs it would pass %HESITATION this argument inside itself and when the the promise is fulfilled using then it'll passes argument which is the same same guy here clean so I can do is simply say from resolve this is a horrendous crime yet %HESITATION the room is clean now let's say if you rejected what would happen so for that we can change another argument called catch here I would pass a function and I would say from project %HESITATION so here I would have to say not clean right I'm not sure if it's clean Danny would resolve it if it's not clean data rejected so if it's gonna be rejected I need to say falls here then it in that case it would rejected and I would get this %HESITATION not clean through this argument and I can consulate okay so be the messages that room is not clean no again here what we promised to do is happening right away we not doing anything %HESITATION but in order to explain the concept I wanted to keep it very clean and assuming that %HESITATION after doing day is is clean is sad that makes the promise either I resolved or reject a before we move one I'm saving this example here %HESITATION so if you go this is particularly are al you can check it out okay up now look kid a little bit of complex example where %HESITATION you have to finish something before you can start something right so let's say %HESITATION if you you know you cannot remove the garbage before you can actually clean their real job to clean them no so once you finish cleaning your room then you can remove the garbage and once you you know do both and then you guys scream you know your parents would give you ice cream as Adam ward you cannot get the award until you clean the room and take the garbage so there's dependents right so here in the code I have %HESITATION three separate promises and basically I have three functions the first function led %HESITATION clean room it actually returns a promise to clean the room and video and I'm I directly resolving it I don't have I don't need to wait for a good week %HESITATION so I'm just resolving right away otherwise he would %HESITATION here you would basically clean the room and that is all either resolve or reject but I'm just resolving it means it's clean a same thing happening for remove the garbage and %HESITATION winning the ice cream okay now around I want to ride this nasty promise where once the clinic is done I want to remove the garbage and once %HESITATION garbage is removed I want to get the okay %HESITATION so our first two right clean them and see how the seductive so nice and this is why we use promised so at first %HESITATION clean the room %HESITATION so what I execute dysfunction ate nothing but returns its promise okay %HESITATION that have defined here and when as I said before it has a damn function which actually wait for promise to you finished and only that it would run this function that now inside this dead function I would have **** a callback function since our it only runs when beast this promises finished then I could start another promise which is similar the garbage so all I'm gonna simply do is return garbage now when I exit with this this function nothing but a returns as promised and basically this now became becomes up Thomas four remove the garbage so I can actually gone and then on that promise but in that I have a function %HESITATION that waits for that promise to finish to remove the garbage want to Spanish I can return %HESITATION under another function called I screamed when that is done I can simply say regular low function site which basically %HESITATION runs when everything is done altri promises have been fulfilled %HESITATION here you would say if I run this it says finished actually a since for every resolve I am getting a message for into this that fox because when I finished are cleaning the room it sends a message with the resolve call %HESITATION clean the room I can actually catch this message in the result and I can pass that message into the next function when I %HESITATION seem think I would get a result here as well and I can pass it here and in the end I would get the result here as well now what I can do I can %HESITATION whatever message that I get in the first %HESITATION after cleaning the room message and I can append this mess so what is going to do is gonna come kept all the messages resulting from fulfilling each promise no actually I need to say finished plus Byron Davis 
14: hello when Vulcan to takes into Toros attorney of your going to talk about generators on this is the second part of the series generators and iterators %HESITATION in the last tutorial we covered %HESITATION he dribbles and iterators and so this part we gonna cover only ten if you wanna add recap of the last patrol you can actually look at Europe I'm gonna provide a link here so we can watch it and then come to the surface but I will provide a quick overview of %HESITATION into it iterators are in disorder Roswell and so does who didn't learn %HESITATION from previous Israel can learn here so quickly kept recap off iterators %HESITATION arrays are incredible objects which means you can it great to you know valleys of very solid safe I have an army call I and it has been to value the two one two three four by their own gonna go really quickly because in a tribal object it has at this special property in his prototype called symbol not a traitor %HESITATION and if I execute that property %HESITATION which is a function flag abuse function I will get an iterator back so I can say let I would say I and Dan symbol dot it later %HESITATION and I have to execute dysfunction one I execute this function it gives me back this iterator now this equate is very special it helps you aren't it trade to discovery about it using this special function called next so if I say it later dock next it will give you the next value very in this case because if I'm calling for the first time it will give me one I would get an object I would value one and it also give me another property called done which is false right now so I'm done is nothing but aren't out telling me that I'm not done to do sorry I still have some bad news to go %HESITATION once in Donnie's true which means you are at the end of the ari so if I called this %HESITATION next five times see four times to enter into value and the fifth time is to get the vet on Donnie put the true so if I call it five times %HESITATION I should get you know the first four times I get all the formalities and on his faults and the fifth time the values undefined and dead on the street said that point you already know that a stock %HESITATION this is a recap of how it traders working javascript now let's look at the generators now just wait is nothing but a special kind of function they were introduced recently that that hopes to build all its value for a traitors to be used so %HESITATION inch of having all this valley here in the array %HESITATION we can dynamically produces fatties I using generators and and the jury is also a little bit special because it holds a state of this %HESITATION this object %HESITATION so they look like normal function the X. your difference it has disappeared %HESITATION start in front of the name of the generator %HESITATION you can also put do start here right after the function this is also a valid syntax so when he looks at the stars jalousie knows that this is a generator and not of normal function %HESITATION I usually prefer to put the star in front of the name of the %HESITATION generator our in house another New York new expression call yield you'll help you generate the values so if I say yield one some discontent do exactly what we did the last example but instead this time is for of our if you're going to use to yield two three for now if I executives function I will get it %HESITATION iterator back generator now again the same thing I can use iterator to %HESITATION you know go to each value using the function next so if I say corn sold on got next and I could call it five times and when I run it it gives me the exactly the same values and that it did previously when I was using you must be wondering why the heck are using this %HESITATION generator to produce his values you know the generator doesn't produce all the values in advance just like a rate which already has all the values I hear when I called the next at that time it generates that value using the yield so when I when I have the first %HESITATION next function at that time it yields one and so all this other stuff is not even produce so that is the beauty of it it's kinda stops %HESITATION it kinda pauses and then when I caught it again next Denny produces the next valley so I kind of maintaining the state of now what if I wanna build something where there is no limit a generator and I'm gonna Kalitta in finite maker and here I can actually pretty use let I equal to zero start with zero and I can I will fly you to true which means that I just gonna keep going is never gonna stop %HESITATION yield I and I plus plus so if you look at this the generator in basically is %HESITATION never gonna stop %HESITATION if you write a function like days you will get a %HESITATION stack overflow instantly %HESITATION but with a generator you won't get it so let's look at how it works infinite maker and if I say console log calling this even though it looks like it's an infinite loop up it's because it's pausing it's not going to all the men %HESITATION it only because yield when I called next that is why our it works otherwise he would he would give you stack overflow so if I run this now and made a mistake no I get you know zero one two three four five six and done his faults I can keep going in a shaky would give keep giving me new baths so this is the advantage of %HESITATION generator because it pauses %HESITATION it maintains a state while I want to call the next are also now you can have multiple generators any can yield from what you can yield from one generator to another so let's see if I have a generator now which yields one entity %HESITATION and I can create another generator and it just basically yields to and so I can say here %HESITATION yield star and they should be should yield one two and three basically so this you can also do so if I run this I would get one two three and if I now returning any value would stop the generator there so if I say right here in between if I say return %HESITATION hello this basically stops the do this with the last value so I run this after hello it stops so hello is alas value let's look at dinner more useful %HESITATION example of how to use generators 
15: hello and welcome to Texas tutorials and today we are going to cover some of those new string function in latest Chaska which is %HESITATION ECM is six or E. CMA fifteen what do you call it %HESITATION and one of the cool feature is that template string so we gonna cover template street and this is something I've been looking forward to in jaws can because %HESITATION it is quite cumbersome to actually do all the string operations in Chaska currently %HESITATION especially printing them out escaping the special characters on the stuff so template string makes it much easier first of all let's welcome back tick %HESITATION on your mac keyboard you can find the back take %HESITATION in the same button as tele %HESITATION and I don't know how to have a PC so I turned away which locator of PC but you can easily find out using Google %HESITATION we basically are when you write your strength you can do it this way I use a single coat so you can say stream equal to hello this is a single quote or you can say equal to hello what double coat but with the back take you can do the same thing okay others no difference but %HESITATION a look Weiss they kind of look angrily %HESITATION single quote but it's more powerful than you single or double quotes %HESITATION previously when you when you when you have to have two lights so for example if I have to I have two lines and in here %HESITATION if you would have to have you have had to do this and then you would have say like this and this would be like to lights our but in India would the back takes %HESITATION you can simply break alliance %HESITATION and it doesn't matter now this is specially you die useful Vinnie using %HESITATION tablets for example if you use any angler to or amber %HESITATION will react %HESITATION he writing those templates %HESITATION %HESITATION there within the jousting %HESITATION frameworks and back did help back takes help you %HESITATION bellows template so easily another cool thing you can do with the back take is interpolation and that's if I have %HESITATION some line I can write a variable called bond a sequel to bond and here I can do interpolation using the dollar sign and curly brackets that's all I have to do is this and I can use the same curly bracket here so try to repeat it %HESITATION so if I change him bark something else down it will be change here Alessandra so far I do console carton log Boland nine you can %HESITATION let's see what happens swear on this it gives me my name is bond James Bond and I can simply save James whatever if I run this I get my name is whatever James whatever this also Convergys %HESITATION any other typing to stream types of for example %HESITATION if I have something like this %HESITATION so let's say five two numbers secondly let one equal to one I let to equal to two up here using interpolation second to let some he quotes have adding they can use the valuable here Tom one and to gives me one plus to now if you look at here up this will be be replace by one this will be a place by two as you can see up you don't have to do the two straight like a lot to say one dot two strings that you know the explicitly convert this into street %HESITATION putting his daughter Prentice %HESITATION curly brackets automatic converts into string now if you look at here %HESITATION what I do one plus two so inside of his curly brackets %HESITATION it will add one plus two and makes it three and then you were converted to treat %HESITATION as a string and then into the interpolation here so if I run this consul log some Byron Davis it would give me adding one and two gives me three other powerful feature %HESITATION this bring is actually tacked tablets not ten Toeplitz basically transforms of a template strings by policing function name before the stream template I can create a function called %HESITATION tagged equal to function %HESITATION it would take two arguments alright trying array and ballots and inside I'm going to print them out some but I say console log trading or a and console logon that's now this is the spread operator minutes you can you can pass and number of arguments and it would it would convert into an array %HESITATION inside so easily arguments to array %HESITATION I have a tutorial on it if you want to learn about it I put a link here Tom now %HESITATION now this type function all I have to do is pass a tag and I would have to pass and destroying template like this I'm passing this stream tablet as an argument I'm not passing this two separate argument like string theory and Velsen high wasn't really doing so this is the magic what it does it it it has two parts %HESITATION basically it has regular string sigatoka nice %HESITATION you know this adding and and give me so you have a team elements of this army %HESITATION which would be this string array and one two and one plus two would be belts CO two race coming up so if I run this year I would get %HESITATION two takes on the first %HESITATION console log string array would gives me this as you can see it gives me adding and and %HESITATION give me three elements of an array also it gives me this ballots 
16: in this tutorial the are going to learn a few advanced topics on %HESITATION pyrrhotite inheritance in Java script the first thing you know nine and is how the subclass object works how to override the will also learn how to override methods in prototype chain and adding on matters to the master object improves types chain so that our we can use those matters for all the objects we create so in this tutorial we are what we are going to do and we are going to create a base class object and from the base class object we are going to us create two subclass objects our which will inherit our properties from our base class object but it can have its own property our and then from each sub class project we can create different objects are we gonna do the whole thing with using opera type yeah inheritance Java script does not have class definition I like John so on in in Java script in Java script instead of creating classes you create constructors and so essentially we will have a base class constructor and you can create some cost constructors and using those subclass constructors you can create optics okay so here in this example are I created a base class our name job and it has a property called pace arm in arm assigning a default value to it eek which is true so basically this is a base class constructor I have a matter print that I'm attaching to the prototype office the base class object job and all it does it fits it pays true then it to say hire me or it say's no thank you I don't wanna shop now I'm gonna create a sub class object call take job equal to function this is also a constructor arm I'm gonna call it title and pace gonna passing the I'm passing these two variables armed now I can simply say their stock title equal to title which is this guy here and I can say did stock pace equal to the pace so by default I said pays equal to two and when I came to take type job I can said this power are using your Upromise now for this sub class I want our days to be job to be a base class right now on it's not %HESITATION disk classes independently and define so how do I do that so in order to do that now I can use call matter I can say job doc call this this line essentially because this constructor and also set up this value and makes this a parent class or base class for some cross our however it still has an inherited the color types all the base class so we'll do that next but just remember calling this I would set up this now I have a great tutorial on callup climbed by if you want to learn applied a link here are somewhere on the left side here %HESITATION so you can you can you can look at it now the second thing I want to do is I want two inherited I want to inherit from a jobs all the matters from jobs watertight so for that all I have to do yes I need to create a prototype and copy I need to do this tak job dot photo type equal to object dot create and we did this I'm going to say job dot proto type what does Linus saying that I want to inherit from job doctor type and the last thing I wanna do is set the constructor so I want to save shop dot go to a time Dr constructor equal to tech job basically I am setting this constructor as the constructor of tech job I know the center Syntex it's really here but all I have to on you have to pay attention to to his three lines first thing you have to do is called job dot called nine days which inherits all the our properties and matter defined inside the job the second thing you have to do as I inherited from the prototype office job which is on which you can do using this line and the third thing is to set a constructor off attack job %HESITATION using dislike now let's create objects now from this subclass %HESITATION I can save our solved where position equal to them you tech job and I can say I watch our script programmer this would be a title and are we can set the pay to be truth midget pace now I can do console dot long what is going to do it it's since offer position doesn't have its own printed matter as you can see our it's gonna it's gonna use the jobs prototype print matter from here so when I run this prints out please hire me I can also create com softer position to and this would be score we need programs I can say Pagel falls I'd only be programmer also to get paid now but just for having a fun we can say %HESITATION dais anti Londis it's giving me so the first one it says please hire me because pays true and the second one it says no thank you what the for the sept suffer busy too one paced false even though we have a printed matter here I can actually overwrite print this print matter and I need to do it actually right after I inherit it inherits from if I do it before that it will overwrite it so so I have added this Tom I'm a matter pricked for tech job Tom after I said the prototype for the tech job on this matter basically if if it if the pay is true Dan it's gonna print out job was great hire me espace falls then it's going to say I would rather die Joske's are now all I have to do is sit on this again snow so I run this it says in the foot for the first pollution of the pace true it just says javascript programer job was great please hire me after the second position it says I would rather nine Joske's now improve type inheritance chain first thing you would do wow when you call a method so for example if I call a method for sulfur position are so I call mentor print source offered position it works first look in its own prototype if it has if it has a matter called print %HESITATION and they would run it if it doesn't happen it will look at D. prototype office detect job which is which is this and you would find it here and it would use it it would not go further up the chain but let's say if this matter was not here like in the first example our it would go further down in the base class and you would find it here our anywhere running 
17: welcome to Texas tutorials today we are going to learn about recursion in Chaska just like many other languages javascript also supports the cushion and it's a little different and %HESITATION so the languages so we are going to understands %HESITATION what recursion is and how to write because of color in Joske's and then then we are going to look at some of the problem that because at a Christian so you can avoid it recursion in that sal is when a function calls itself from inside of its own Bonnie so let's see if I have a function call axe and one eight calls itself from inside this is called a cushion and let's say you want and and number one two three in all the consecutive numbers up to and and and could be any large number so if I want to do it in a for loop I would just simply define the total first and then we are going inside you're going to say total plus equal to I at the end of the fortify say %HESITATION counsel dot log total now we don't have and yet so I'm just gonna put she for now and running so far I added three %HESITATION so one plus two is three and three plus three is six so I'm gonna have sex right so I run it I would get six so here are but in order to find a pattern here the patent is basically the last total which is zero in the first %HESITATION line and we are adding the next valley and that's gives us the the next total so I can write this in a in a functional sense this way so where P. one plus to equal to P. two and so P. N. minus one plus and equal to P. N. someone I could function at equal to function and within this function body %HESITATION I am going to say and return and plus bad and minus one as we looked at in the previous slide so I can simply say if N. is less than equal to zero this recursion stop the return zero because return and plus had and minus one so if I run and hide three I should get six and here sorry if I run here I get sick now let's look at what really happens here so when I say I'd three %HESITATION this actually gives me three plus add to write it returns this actually because if I passed three here it would give me three plus add three minus one that's too right now what happens in the net it makes it %HESITATION Lou recursive loop is apt to get converted into further more so this would be again three plus now to plus pad one NO ADS zero is nothing but zero that's where we return back zero so and this becomes three plus to plus one plus zero equal to six when I called not added three it holds I'm not exactly out of this %HESITATION at function until all add to add one and zero gets executed so I'm still inside this function okay until a point where it returns and zero which is zero and then it kind of releases %HESITATION the function right so technically I can convert this into a our deep nested function so let's do that let's say if it's upon passing three into this function and this is the app function %HESITATION what is gonna happen it's it's gonna say I tree plus function we're adding only three numbers right what if we gonna ask what if he and eight thousand what would happen if I anti wasn't number Dan this function loop Nestor function do becomes cows in times deeper well it's actually %HESITATION keep you know building function inside until it reaches zero so you're gonna have too many functions nested functions and dad could be a problem in order to understand let's say I have to function third second and flushed and they're independent function I'm not putting anything in the body just you know just to %HESITATION explain how it works and then I'm gonna a number executives to function first second third now internally in space internally %HESITATION jealous kit has what is call execution stack so when I run this fast function it puts this function into this execution stack afraid to execute right %HESITATION once it's finishes then it gets are taken off of the stack and end up the second function gets in the stack stack is basically our L. I. F. O. means last in first out so usually you have this global %HESITATION execution context right and then you you have the first function so you put it on the honest it would put it on the stack Dan it's just a move because of the function gets executed than the second function gets on the stack and it's gets executed so it's taken off and then the third function comes in and that functions get executed so the stock here is always %HESITATION anti almost like a few things on a stack because of you know you execute function by function so instead of doing this I only execute first when I did it first in goes on the stack and then but it won't finish because from inside out makes getting function second right so then this function would get on the stack and but he won't finish because a third function gets not on the stack and once a third function gets executed then then the third function who would go off the stack the second would go off the stack and then the French would go to stay so in the last function gets executed then things start popping off the stack so he'll be like a global executions bush function go than a stack of them the second function goes on the stack and the third function goes on the stack now let's bring up are a Christian example back so here I wanted to ask three at three out aids it will have a similar third it will call to call one and so it's for %HESITATION and it would have been the land of this it would be tough for stacked high now if you have let's say thousand of and thousand you will have a stack that is hi S. powers and and %HESITATION you won't it won't start pulling out of the stack until you have the last %HESITATION which is at zero right it's bad because every browser have a maximum limit 
18: rune hi and welcome to Texas tutorial today we are going to know our %HESITATION different object creation per patents in Java script what it really means are let's say you have a class info and then you want to create multiple objects from that class I for example here via creating I'm John sinful Peterson friend Joe's info are in Java script since there is no formal support of class are there new deadlock flexibility the way we create objects so we get a look at this arm how to do it are we gonna look at the four different patents constructor Patton factory Patton prototype print pattern and dynamic uploaded iPad so first let's quickly look at objects since Java script has no formal support of classes we gonna create objects and then of unit create other objects from the data object so let's first look at the factory happen so for that of you're going to use is wonderful that psychology Aspin about dot net %HESITATION here Megan and rider chalice kick in this lower block and we gonna debug our code in consulado so well let's own first to create de in the main object which what should we gonna call up people factory so the name of the object is people factory equal to function so functions are more suitable up for creating other objects because they behave more like classes when you define like this are not just what are we gonna do we gonna create a a temporary object in scientists function %HESITATION people factually while the gonna content not T. E. S. P. and it's an empty object are we can also clouded like this war IGMP equal to New York object of which is are exactly the same thing but we just gonna call this shorter syntax are now let's add on she properties to this this time R. T. E. MP doc the H. on Iqaluit age now here we gonna pass out treat of parameters Namek age and let's say a state US attempt H. equal to age are another property is our name equal to name our ten dot state equal to state so he's gonna signing of we creating this three property for the subject and we're taking his parameter and setting setting the property is that a leg Joske's jouer a set function when I'm gonna create another are a function here %HESITATION called free in person it's a function aren't and all he does is just console log you know what we're gonna print this entire are getting one strain are name plus I did start page plus for that one because he this stock state now this is a this also is half as attaches function of the subject attempt no we can simply return this object so now this behaves like a factory this function behaves like a factory %HESITATION whenever you want to create a new person all we have to do is are we can save up our person one equal to and we can call this function and we gonna pass name that say we can say John he's twenty two years old and he lives in California sociais and this to create a one person we can actually create another person cult person to and this would be lives see now we can look at we can look at this by simply are using the function print person so I can say person one dot trained person and I can also do the same thing or person to so using this factory function of created two person aren't now in order to look at it pa this I'm going to open the console loves click on the right click off the browser if using crow %HESITATION you can simply saying Pat expect element if using FOB Firefox and other browsers there's a way to do it %HESITATION putting in Google earth you know inspect element and Firefox is very easy but I would suggest using chrome for this %HESITATION so now if I just want us by clicking on this run by it prints out two people John twenty three California I came twenty seventh South Carolina so this is a factory per of Patton all we did is creek created a factory function and we did this we created a of an object we attach the properties to it would show repast %HESITATION as a private in his function and then we do turn the entire object so when I when I say person one it's nothing but this this new temporary object ID that is created so because behaves like a factory we are calling it a fact factually power now let's look at another pattern no second parent we gonna look it is constructor Pat conceptually a constructor pattern is also a symbol Armonk similarly if you're going to create an object called war all people she stroked her equal to function and similar to a factory part and we are going to pass key variables %HESITATION name okay parameters name age and state are but instead of creating a temporary object and you're going to attach we gonna create property for people constructor functions itself remember functions are also objects I can actually add of properties to it by saying this name dot just thought maybe Clinton name so this is this name is actually a property of dysfunction and similarly I can create this stock age equal to each haunted star state to put it state arm and also create a function call Daystar right 
19: hello and welcome to Texas to tortillas %HESITATION this is a mini series on it traders and generators are in this series the first part would be understanding that it travels and if writers so here it is and the next patrol all go to generators and its use now this is a little bit of complex subjects so in order to explain in a simple languages look difficult but I'll try my best and as I said I always try to understand the fundamentals %HESITATION before moving on to complex stuff arrays in javascript are consider interval because you have elements and you have index and you get a trade to each element you four do %HESITATION or take for each however if you have an object such as to justice where you have a key value pairs %HESITATION this is not considered as a trickle now how do you know what is a travel and what is not so recently %HESITATION the latest wasn't Josten interviews %HESITATION something called symbol not a traitor it's a property and it travel objects and you can find out using decks if I take an array like this and I can look it inside what property has a its prototype using console doc dot DIR they should give me that the detail on this this object and if I run this I should get %HESITATION array and I should get something Caputo within that I have all the clerk I. matters for eight and one of the matter is actually call symbol dot it would Odysseus recently added to all ticket travel objects if I do the same thing for this particular object and if I run Davis I would get all the subject here and if I look at his prototype I would not get anything had I would not get that matter symbol not a traitor so that is a difference between %HESITATION retrieval objects and knowledgeable logic this is an on air travel Java script recently interviews few new data structures %HESITATION Java script has now sets week sets map envy me maps are these are all it triples %HESITATION I'm not gonna go to go to all of them but I'm just going to pick one like sets sets are %HESITATION I mean like contacts %HESITATION what we only accept unique values so for example I can create a new set %HESITATION second say let my set equal to five easing you keyword and said would as capital and we did that I can't define sort of in a hurry and so it's one to two to three okay now what other because a set in only accepts our unique key circle to out anything that is console DIR my set I should see the same behavior so if I run this I should get the set %HESITATION penny could see the values it has this %HESITATION entries field where you have a unique rallies one two and three so it and if you look at his prototype I should see the same thing similar a traitor %HESITATION another thing about the similar iterator it allows you to use a new Ford up called for off of how does this work so I can say I can do cue the elements of this set using for off so I can say for and the way I would say is let accretive valuable here %HESITATION value off and then all of all of this set so my set and I can say console not log well how should print one two and three because the set it doesn't print all devalues because it doesn't have a count do duplicates so fire under this I would get one two and three I cannot use the same thing on this subject %HESITATION however it does have a matter called for in so I can say for let Val off %HESITATION an object and I should say actually key because it prints all the keys %HESITATION if I say clone so you log key it should wooden doll the keys out actually I should say as I said it won't work because it gives you are because it is you can see it says I'm caught type there symbol dotted trade is not a function %HESITATION so it will work on this now I can do in clear the sand drawn this again I would get all the keys name age friends and get me %HESITATION however there's a weakness to this year aid it would print out all of the she's including anything that is defined by user and its prototype from the air travel now let's move to iterator %HESITATION so we looked at the cell a new property that was injuries caused symbol not a traitor %HESITATION that is only available in itravel objects I like string set some you know up so you can use this particular property is nothing but a function %HESITATION its product function that is available to auntie a tribal objects aren't you can the run this a function to get it iterator out so the way you can do it is if I define an array %HESITATION my very equal to I can define one two three four five and I can say %HESITATION a traitor equal to found my have a and symbol dot iterative and I can thank you executives function of so this is this for this function is available on duty in the Perot prototype of this very and I can run this moon function %HESITATION and I would get an iterative so this it really is very interesting I can actually %HESITATION run a next matter on the ship writer and he would give me each value %HESITATION one by one so the way it would work as I can say iterator conduct next I can actually consulado this %HESITATION if I run this it gives me to fix and give me that it will it gives me that value the first value of this theory which is one and it would give me another property called done %HESITATION using this property I can determine if I'm at the end of this area not right now I'm at the beginning because it has set five elements to it right it won't give me down a quick of thoughts until I get the last element so five print this five times I will get out five different values I would get one of the first two three four five and Everytime Donnie still thoughts I have reached last element which is five and done is still fonts %HESITATION now if I cut it again now the value will be undefined and done will be true so at this point I would stop %HESITATION now this intruder is really useful how many use it %HESITATION in combination with generators so that would be the next a tutorial %HESITATION you can follow the link after this tutorial to go into this next recoil and that's when we learned about generators and real use of this iterator and if you learn something from district oil %HESITATION priest provide a constructive comments %HESITATION like the video and subscribe to channel for future cool video 
